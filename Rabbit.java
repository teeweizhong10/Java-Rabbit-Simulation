import java.util.*;

/**
* This program simulates the growth of a bunny population starting with a fixed amount of does and bucks.
* This is the Rabbit.java file and it contains the properties of rabbits that the RabbitSimulation will refer to.
* @author Wei Zhong Tee
* @since 16 February 2020
*/

public class Rabbit {
  private String gender;
  private String sex;
  private int age = 0;
  private int gestation = 0;
  private int litterCount = 0;
  private int gestation_period;
  private int postPregnancyDaysRemaining = 0;
  private int random;

  public Rabbit() {

  }

  /**
  * This is an overloaded constructor that is used for adding the Rabbit's sex to the ArrayList of type <rabbit>
  * @param in is the string that determines the rabbit's gender
  */

  public Rabbit(String in) {
    gender = in;
    age = 0;
  }

  /**
  * This method is used so that RabbitSimulation.java can access the strings in the ArrayList of type <Rabbit>
  * @return gender "M" or "F" to determine gender.
  */

  public String toString() {
    return gender.toString();
  }

  /**
  * This method is used to generate random numbers to determine sex or the amount of litters a doe can have.
  * @param a is the number that tells the method how many random variables it needs.
  * @return int is the random number that is used for determining sex or amount of litters.
  */
  public int getRandom(int a) {
    Random rand = new Random();
    random = rand.nextInt(a);
    return random;
  }

  /**
  * This method is used to generate random numbers to determine how long the pregancy is
  * Based on what is generated by getRandom(), the appropriate amount of pregancy days between 28 and 32 will be set for female rabbits.
  * @return int number of days a doe is pregnant for.
  */

  public int getGestationPeriod() {
    int size = getRandom(5);
    if (size == 0) {
      gestation_period = 28;
    }
    if (size == 1) {
      gestation_period = 29;
    }
    if (size == 2) {
      gestation_period = 30;
    }
    if (size == 3) {
      gestation_period = 31;
    }
    if (size == 4) {
      gestation_period = 32;
    }
    return gestation_period;
  }

  /**
  * This method is used to generate the random amount of litters a doe can have .
  * @return int the amount of litters born in one birth event.
  */

  public int getLitterCount() {
    int size = getRandom(6);
    if (size == 0) {
      litterCount = 3;
    }
    if (size == 1) {
      litterCount = 4;
    }
    if (size == 2) {
      litterCount = 5;
    }
    if (size == 3) {
      litterCount = 6;
    }
    if (size == 4) {
      litterCount = 7;
    }
    if (size == 5) {
      litterCount = 8;
    }
    return litterCount;
  }

  /**
  * This method is used to generate the sex of the litters born.
  * @return String the sex of each litter born, "M" or "F".
  */

  public String getSex() {
    int size = getRandom(2);
    if (size == 0) {
      sex = "M";
    }
    if (size == 1) {
      sex = "F";
    }
    return sex;
  }

  /**
  * This method is used for incrementing a rabbit's age every year.
  * @param a is the number of the current year so that 1 can be added to the existing age (days).
  */

  public void addAge(int a) {
    age = a + 1;
  }


    /**
    * After adding the age in the previous method, this method is to get the new age back in RabbitSimulation.java
    * @return int the new age of each rabbit.
    */

  public int getAge() {
    return age;
  }


    /**
    * This method is used for resetting all rabbit properties before a new trial begins.
    */

  public void resetAll() {
    age = 0;
    gestation = 0;
    postPregnancyDaysRemaining = 0;
  }
}
